name: Check Releases

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2,6,10,14,18,22 * * *"  # Runs every 4 hours

jobs:
  check-releases:
    runs-on: ubuntu-latest
    env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
        TWITTER_API_SECRET: ${{ secrets.TWITTER_API_KEY_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        NOSTR_PRIVATE_KEY: ${{ secrets.NOSTR_PRIVATE_KEY }}
        NOSTR_RELAYS: ${{ secrets.NOSTR_RELAYS }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check if new-releases branch exists
      run: |
        BRANCH_NAME="new-releases"
        if git ls-remote --heads origin "$BRANCH_NAME" | grep -q "$BRANCH_NAME"; then
          echo "Branch '$BRANCH_NAME' exists. Failing the job."
          exit 1
        else
          echo "Branch '$BRANCH_NAME' does not exist. Continuing..."
        fi      

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20

    - name: Install dependencies
      run: npm install
      working-directory: scripts

    - name: Update release
      id: fetch-release-step
      working-directory: scripts
      run: node check-releases.js true true

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v7.0.6
      id: create-pull-request
      with:
        title: "New releases"
        commit-message: "New releases"
        branch: "new-releases"
        add-paths: "item-types/*/items/*.json,releases.md"
        reviewers: "${{ env.ASSIGNEE }}"

    - name: Enable Pull Request Automerge
      if: steps.create-pull-request.outputs.pull-request-operation == 'created'
      uses: peter-evans/enable-pull-request-automerge@v3
      with:
        token: ${{ env.GITHUB_TOKEN }}
        pull-request-number: ${{ steps.create-pull-request.outputs.pull-request-number }}
        merge-method: squash

    - name: Trigger TBH Repo Workflow
      if: steps.create-pull-request.outputs.pull-request-operation == 'created'
      run: |
        curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TBH_PAT }}" \
          https://api.github.com/repos/${{ secrets.TBH_REPO }}/actions/workflows/update-database-module.yml/dispatches \
          -d '{"ref":"master","inputs":{"triggered_by":"public_repo_commit"}}'